# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Test

on:
  workflow_dispatch:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

permissions:
  contents: write
  actions: write
  security-events: write

env:
  DOTNET_VERSION: '9.0.x'
  SOLUTION_NAME: "CodeReview"

jobs:
  Build_Test_Coverage:
    runs-on: ubuntu-latest

    steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: ${{ env.DOTNET_VERSION }}
          env:
            DOTNET_INSTALL_DIR: "./.dotnet"

        - name: Restore dependencies
          run: dotnet restore

        - name: Build
          run: dotnet build --no-restore

        - name: Test
          run: |
            mkdir -p coverage
            dotnet test ${{ env.SOLUTION_NAME }}_Test/${{ env.SOLUTION_NAME }}.Test.csproj \
            --no-build \
            --verbosity normal \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=lcov \
            /p:CoverletOutput=coverage/lcov.info

        - name: Run Codacy Analysis CLI
          uses: codacy/codacy-analysis-cli-action@97bf5df3c09e75f5bcd72695998f96ebd701846e
          with:
            project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
            verbose: true
            output: results.sarif
            format: sarif
            gh-code-scanning-compat: true
            max-allowed-issues: 2147483647

        - name: Upload SARIF results file
          uses: github/codeql-action/upload-sarif@v3
          with:
            sarif_file: results.sarif

        - name: Send Coverage to Codacy
          run: |
            bash <(curl -Ls https://coverage.codacy.com/get.sh) report \
              --project-token=${{ secrets.CODACY_PROJECT_TOKEN }} \
              --coverage-reports=coverage/lcov.info
